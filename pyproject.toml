[project]
name = "LAHSO"
dynamic = ["version"]
authors = [
  { name = "Satrya Dewantara", email = "satrya.dewantara@gmail.com" },
  { name = "Jeff Smits", email = "j.smits-1@tudelft.nl" },
]
description = "LASHO"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering",
]
dependencies = [
    "gradio>=5.6.0",
    "gurobipy==11.0.1",
    "matplotlib>=3.9.2",
    "numpy>=2.1.3",
    "pandas>=2.2.3",
    "simpy>=4.1.1",
]

[tool.uv]
dev-dependencies = [
  "pytest>=8.3.3,<9",
  "pytest-cov>=5.0.0,<6",
  "pre-commit>=3.8.0,<4",
  "mkdocstrings[python]>=0.26.1,<1",
  "mkdocs-material>=9.5.39,<10",
  "setuptools-scm>=8.1.0,<9",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "_version.py"

[project.urls]
Homepage = "https://github.com/satryad/LAHSO"

[project.scripts]
ui = "lahso.ui:main"
service_to_path = "lahso.service_to_path:main"
generate_kbest = "lahso.kbest:main"
model_train = "lahso.model_train:main"
model_implementation = "lahso.model_implementation:main"
bar_chart_plot = "lahso.bar_chart_plot:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]

[tool.coverage]
run.source = ["lahso"]
port.exclude_lines = [
  'pragma: no cover',
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]



[tool.ruff]
src = ["src"]
line-length = 88  # how long you want lines to be, 88 is black's default

[tool.ruff.format]
docstring-code-format = true  # code snippets in docstrings will be formatted
exclude = ["*.ipynb"]

[tool.ruff.lint]
# For more strict linting and code simplifications, replace this with
# https://github.com/NLeSC/python-template/blob/main/template/pyproject.toml.jinja#L121-L136
select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  # "D",           # pydocstyle, uncomment to have the docstrings linted
  # "ANN",         # flake8-annotations, uncomment to have type hint annotations linted
]
ignore = [
  "PLR",    # Design related pylint codes
  "ISC001", # Conflicts with formatter
]
pydocstyle.convention = "google"
exclude = ["*.ipynb", "src/lahso/simulation_module_improved.py"]

[tool.ruff.lint.per-file-ignores]
# Tests can ignore a few extra rules
"tests/**.py" = [
    "ANN201", # Missing return type annotation for public function
    "D103",   # Missing docstring
    "S101",   # Use of assert is detected
    "INP001", # Missing __init__.py file
]
"src/lahso/ui/**.py" = [
    "SIM117", # Nested with statements are not combined for clarity, corresponds better with UI output
]

[tool.yamlfix]
line_length = 88
sequence_style = "keep_style"
explicit_start = false
whitelines = 1
section_whitelines = 1
